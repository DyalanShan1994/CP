// <auto-generated />
using System;
using CP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CP.Migrations
{
    [DbContext(typeof(CpContext))]
    [Migration("20220910054310_addDiscrepancyRulesRelation")]
    partial class addDiscrepancyRulesRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CP.Models.ConsultantInfo", b =>
                {
                    b.Property<int>("ConsultantInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsultantInfoId");

                    b.ToTable("ConsultantInfo");
                });

            modelBuilder.Entity("CP.Models.CustomerInfo", b =>
                {
                    b.Property<int>("CustomerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsultantInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerInfoId");

                    b.ToTable("CustomerInfo");
                });

            modelBuilder.Entity("CP.Models.DiscretionaryRules", b =>
                {
                    b.Property<int>("DiscretionaryRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ConsultantBuy")
                        .HasColumnType("bit");

                    b.Property<int>("ConsultantInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("ConsultantSell")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomerBuy")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("CustomerSell")
                        .HasColumnType("bit");

                    b.Property<string>("Rules")
                        .HasColumnType("xml");

                    b.HasKey("DiscretionaryRuleId");

                    b.HasIndex("ConsultantInfoId");

                    b.HasIndex("CustomerInfoId");

                    b.ToTable("DiscretionaryRules");
                });

            modelBuilder.Entity("CP.Models.DiscretionaryRules", b =>
                {
                    b.HasOne("CP.Models.ConsultantInfo", "ConsultantInfo")
                        .WithMany()
                        .HasForeignKey("ConsultantInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CP.Models.CustomerInfo", "CustomerInfo")
                        .WithMany("DiscretionaryRules")
                        .HasForeignKey("CustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
